import { AfterContentInit, AfterViewInit, ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { PdfCspPolicyService } from '../../pdf-csp-policy.service';
import { PDFNotificationService } from '../../pdf-notification-service';
import { ResponsiveCSSClass } from '../../responsive-visibility';
import { PdfShyButtonService } from './pdf-shy-button-service';
import * as i0 from "@angular/core";
export declare class PdfShyButtonComponent implements OnInit, OnChanges, AfterViewInit, AfterContentInit {
    private pdfShyButtonServiceService;
    private sanitizer;
    private renderer;
    private pdfCspPolicyService;
    primaryToolbarId: string;
    secondaryMenuId: string;
    cssClass: ResponsiveCSSClass;
    eventBusName: string | undefined;
    l10nId: string;
    l10nLabel: string;
    title: string;
    toggled: boolean;
    disabled: boolean;
    order: number;
    action: ((htmlEvent?: Event, isSecondaryMenue?: boolean) => void) | undefined;
    closeOnClick: boolean;
    onlySecondaryMenu: boolean;
    private PDFViewerApplication;
    renderContent: boolean;
    buttonRef: ElementRef;
    nestedContent: ElementRef | null;
    private _imageHtml;
    get imageHtml(): string | SafeHtml | undefined;
    set image(value: string);
    constructor(pdfShyButtonServiceService: PdfShyButtonService, sanitizer: DomSanitizer, renderer: Renderer2, notificationService: PDFNotificationService, pdfCspPolicyService: PdfCspPolicyService);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    onClick(htmlEvent: Event): void;
    updateButtonImage(): void;
    ngAfterContentInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PdfShyButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PdfShyButtonComponent, "pdf-shy-button", never, { "primaryToolbarId": { "alias": "primaryToolbarId"; "required": false; }; "secondaryMenuId": { "alias": "secondaryMenuId"; "required": false; }; "cssClass": { "alias": "cssClass"; "required": false; }; "eventBusName": { "alias": "eventBusName"; "required": false; }; "l10nId": { "alias": "l10nId"; "required": false; }; "l10nLabel": { "alias": "l10nLabel"; "required": false; }; "title": { "alias": "title"; "required": false; }; "toggled": { "alias": "toggled"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "order": { "alias": "order"; "required": false; }; "action": { "alias": "action"; "required": false; }; "closeOnClick": { "alias": "closeOnClick"; "required": false; }; "onlySecondaryMenu": { "alias": "onlySecondaryMenu"; "required": false; }; "image": { "alias": "image"; "required": false; }; }, {}, ["nestedContent"], ["*"], false, never>;
}
